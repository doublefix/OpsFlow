// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v3.12.4
// source: podexec.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 初始化信息，必须作为第一个发送
type ExecInit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 会话唯一标识（客户端生成或服务端分配）
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName       string                 `protobuf:"bytes,3,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	ContainerName string                 `protobuf:"bytes,4,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	Command       []string               `protobuf:"bytes,5,rep,name=command,proto3" json:"command,omitempty"`
	Tty           bool                   `protobuf:"varint,6,opt,name=tty,proto3" json:"tty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecInit) Reset() {
	*x = ExecInit{}
	mi := &file_podexec_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecInit) ProtoMessage() {}

func (x *ExecInit) ProtoReflect() protoreflect.Message {
	mi := &file_podexec_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecInit.ProtoReflect.Descriptor instead.
func (*ExecInit) Descriptor() ([]byte, []int) {
	return file_podexec_proto_rawDescGZIP(), []int{0}
}

func (x *ExecInit) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ExecInit) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ExecInit) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ExecInit) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *ExecInit) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ExecInit) GetTty() bool {
	if x != nil {
		return x.Tty
	}
	return false
}

// 调整终端窗口大小（适用于 TTY 模式）
type ExecResize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cols          int32                  `protobuf:"varint,1,opt,name=cols,proto3" json:"cols,omitempty"` // 终端列数
	Rows          int32                  `protobuf:"varint,2,opt,name=rows,proto3" json:"rows,omitempty"` // 终端行数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecResize) Reset() {
	*x = ExecResize{}
	mi := &file_podexec_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecResize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResize) ProtoMessage() {}

func (x *ExecResize) ProtoReflect() protoreflect.Message {
	mi := &file_podexec_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResize.ProtoReflect.Descriptor instead.
func (*ExecResize) Descriptor() ([]byte, []int) {
	return file_podexec_proto_rawDescGZIP(), []int{1}
}

func (x *ExecResize) GetCols() int32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

func (x *ExecResize) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

// 主消息类型，双向流中传输的内容
type ExecMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*ExecMessage_Init
	//	*ExecMessage_Stdin
	//	*ExecMessage_Stdout
	//	*ExecMessage_Stderr
	//	*ExecMessage_Resize
	//	*ExecMessage_Error
	//	*ExecMessage_Close
	//	*ExecMessage_Heartbeat
	Content       isExecMessage_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecMessage) Reset() {
	*x = ExecMessage{}
	mi := &file_podexec_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecMessage) ProtoMessage() {}

func (x *ExecMessage) ProtoReflect() protoreflect.Message {
	mi := &file_podexec_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecMessage.ProtoReflect.Descriptor instead.
func (*ExecMessage) Descriptor() ([]byte, []int) {
	return file_podexec_proto_rawDescGZIP(), []int{2}
}

func (x *ExecMessage) GetContent() isExecMessage_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ExecMessage) GetInit() *ExecInit {
	if x != nil {
		if x, ok := x.Content.(*ExecMessage_Init); ok {
			return x.Init
		}
	}
	return nil
}

func (x *ExecMessage) GetStdin() []byte {
	if x != nil {
		if x, ok := x.Content.(*ExecMessage_Stdin); ok {
			return x.Stdin
		}
	}
	return nil
}

func (x *ExecMessage) GetStdout() []byte {
	if x != nil {
		if x, ok := x.Content.(*ExecMessage_Stdout); ok {
			return x.Stdout
		}
	}
	return nil
}

func (x *ExecMessage) GetStderr() []byte {
	if x != nil {
		if x, ok := x.Content.(*ExecMessage_Stderr); ok {
			return x.Stderr
		}
	}
	return nil
}

func (x *ExecMessage) GetResize() *ExecResize {
	if x != nil {
		if x, ok := x.Content.(*ExecMessage_Resize); ok {
			return x.Resize
		}
	}
	return nil
}

func (x *ExecMessage) GetError() string {
	if x != nil {
		if x, ok := x.Content.(*ExecMessage_Error); ok {
			return x.Error
		}
	}
	return ""
}

func (x *ExecMessage) GetClose() bool {
	if x != nil {
		if x, ok := x.Content.(*ExecMessage_Close); ok {
			return x.Close
		}
	}
	return false
}

func (x *ExecMessage) GetHeartbeat() string {
	if x != nil {
		if x, ok := x.Content.(*ExecMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return ""
}

type isExecMessage_Content interface {
	isExecMessage_Content()
}

type ExecMessage_Init struct {
	Init *ExecInit `protobuf:"bytes,1,opt,name=init,proto3,oneof"` // 初始化连接
}

type ExecMessage_Stdin struct {
	Stdin []byte `protobuf:"bytes,2,opt,name=stdin,proto3,oneof"` // 用户输入
}

type ExecMessage_Stdout struct {
	Stdout []byte `protobuf:"bytes,3,opt,name=stdout,proto3,oneof"` // 标准输出
}

type ExecMessage_Stderr struct {
	Stderr []byte `protobuf:"bytes,4,opt,name=stderr,proto3,oneof"` // 标准错误输出
}

type ExecMessage_Resize struct {
	Resize *ExecResize `protobuf:"bytes,5,opt,name=resize,proto3,oneof"` // 终端窗口调整
}

type ExecMessage_Error struct {
	Error string `protobuf:"bytes,6,opt,name=error,proto3,oneof"` // 错误信息
}

type ExecMessage_Close struct {
	Close bool `protobuf:"varint,7,opt,name=close,proto3,oneof"` // 请求关闭连接
}

type ExecMessage_Heartbeat struct {
	Heartbeat string `protobuf:"bytes,8,opt,name=heartbeat,proto3,oneof"` // 心跳包，可选
}

func (*ExecMessage_Init) isExecMessage_Content() {}

func (*ExecMessage_Stdin) isExecMessage_Content() {}

func (*ExecMessage_Stdout) isExecMessage_Content() {}

func (*ExecMessage_Stderr) isExecMessage_Content() {}

func (*ExecMessage_Resize) isExecMessage_Content() {}

func (*ExecMessage_Error) isExecMessage_Content() {}

func (*ExecMessage_Close) isExecMessage_Content() {}

func (*ExecMessage_Heartbeat) isExecMessage_Content() {}

var File_podexec_proto protoreflect.FileDescriptor

var file_podexec_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x65, 0x78, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x49,
	0x6e, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x74, 0x79, 0x22, 0x34,
	0x0a, 0x0a, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x22, 0x88, 0x02, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x49,
	0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x73,
	0x74, 0x64, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74,
	0x64, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a,
	0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x05,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32,
	0x44, 0x0a, 0x0e, 0x50, 0x6f, 0x64, 0x45, 0x78, 0x65, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_podexec_proto_rawDescOnce sync.Once
	file_podexec_proto_rawDescData []byte
)

func file_podexec_proto_rawDescGZIP() []byte {
	file_podexec_proto_rawDescOnce.Do(func() {
		file_podexec_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_podexec_proto_rawDesc), len(file_podexec_proto_rawDesc)))
	})
	return file_podexec_proto_rawDescData
}

var file_podexec_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_podexec_proto_goTypes = []any{
	(*ExecInit)(nil),    // 0: proto.ExecInit
	(*ExecResize)(nil),  // 1: proto.ExecResize
	(*ExecMessage)(nil), // 2: proto.ExecMessage
}
var file_podexec_proto_depIdxs = []int32{
	0, // 0: proto.ExecMessage.init:type_name -> proto.ExecInit
	1, // 1: proto.ExecMessage.resize:type_name -> proto.ExecResize
	2, // 2: proto.PodExecService.Exec:input_type -> proto.ExecMessage
	2, // 3: proto.PodExecService.Exec:output_type -> proto.ExecMessage
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_podexec_proto_init() }
func file_podexec_proto_init() {
	if File_podexec_proto != nil {
		return
	}
	file_podexec_proto_msgTypes[2].OneofWrappers = []any{
		(*ExecMessage_Init)(nil),
		(*ExecMessage_Stdin)(nil),
		(*ExecMessage_Stdout)(nil),
		(*ExecMessage_Stderr)(nil),
		(*ExecMessage_Resize)(nil),
		(*ExecMessage_Error)(nil),
		(*ExecMessage_Close)(nil),
		(*ExecMessage_Heartbeat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_podexec_proto_rawDesc), len(file_podexec_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_podexec_proto_goTypes,
		DependencyIndexes: file_podexec_proto_depIdxs,
		MessageInfos:      file_podexec_proto_msgTypes,
	}.Build()
	File_podexec_proto = out.File
	file_podexec_proto_goTypes = nil
	file_podexec_proto_depIdxs = nil
}
